spring:
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://10.10.102.90:3306/wpg_model?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: wpg@2020
    type: com.alibaba.druid.pool.DruidDataSource
    #   数据源其他配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
    quartz:
      driverClassName: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://${MYSQL_MASTER_URL:localhost}:${MYSQL_MASTER_PORT:3306}/quartz?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
      username: root
      password: 123456
  quartz:
    job-store-type: jdbc # 使用数据库存储
    scheduler-name: hyhScheduler # 相同 Scheduler 名字的节点，形成一个 Quartz 集群
    wait-for-jobs-to-complete-on-shutdown: true # 应用关闭时，是否等待定时任务执行完成。默认为 false ，建议设置为 true
    jdbc:
      initialize-schema: never # 是否自动使用 SQL 初始化 Quartz 表结构。这里设置成 never ，我们手动创建表结构。
    properties:
      org:
        quartz:
          scheduler:
            instanceName: clusteredScheduler
            instanceId: AUTO
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: qrtz_
            isClustered: true
            clusterCheckinInterval: 10000
            useProperties: false
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
  redis:
    host: 10.10.102.90
    port: 6379
    password: wPg@2019Test*(
    timeout: 20000
    jedis:
      pool:
        min-idle: 10
        max-active: 20
        max-wait: 5000
feign:
  client:
    config:
      defalut:
        connectTimeout: 10000
        readTimeout: 60000

#线程池配置
thread-pool-factory:
  corePoolSize: 1
  maxPoolSize: 10
  queueCapacity: 1000
  keepAliveSeconds: 60
  threadNamePrefix: 模型-center-

#日志配置
logging:
  config: classpath:log4j2-spring-common.xml
  level:
    root: INFO
log:
  dynamic:
    level: ERROR
  class:
    name: []
dmm:
  menu:
    codes: wpg-dmm